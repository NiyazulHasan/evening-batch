Q) Write a java program to display reverse of a string?

input:
	hello 

output:	
	olleh 

class Test  
{
	public static void main(String[] args) 
	{
		String str="hello";

		String rev="";

		for(int i=str.length()-1;i>=0;i--)
		{
			rev+=str.charAt(i);
		}

		System.out.println(rev);
	}
}


Q) Write a java program to check given string is palindrome or not?

input:
	racar 

output:
	It is a palindrome string 

ex:
---
class Test  
{
	public static void main(String[] args) 
	{
		String str="racar";

		String rev="";

		for(int i=str.length()-1;i>=0;i--)
		{
			rev+=str.charAt(i);
		}

		if(str.equals(rev))
			System.out.println("It is a palindrome string");
		else
			System.out.println("It is not a palindrome string");
	}
}

Q) Write a java program to display the string in a given format?

input:
	XYZ

output:
	XY
	XZ
	YX
	YZ
	ZX
	ZY 

ex:

class Test  
{
	public static void main(String[] args) 
	{
		String str="XYZ";

		for(int i=0;i<str.length();i++)
		{
			for(int j=0;j<str.length();j++)
			{
				if(i!=j)
				{
					System.out.println(str.charAt(i)+""+str.charAt(j));
				}
			}
		}
	}
}

Q) Write a java program to display the string in a given format?

input:
	A1B2C3D4
output:
	ABBCCCDDDD

ex:
---
class Test  
{
	public static void main(String[] args) 
	{
		String str="A1B2C3D4";

		for(int i=0;i<str.length();i++)
		{
			if(Character.isAlphabetic(str.charAt(i)))
			{
				System.out.print(str.charAt(i));
			}
			else
			{
				int n= Character.getNumericValue(str.charAt(i));

				for(int k=1;k<n;k++)
				{
					System.out.print(str.charAt(i-1));
				}
			}
		}
	}
}


StringBuffer 
============
If our content change frequently then it is never recommanded to use String object because for every change a new object will be created.

To overcome this limitation Sun Micro System introduced StringBuffer concept.

In StringBuffer all the required changes will be done in a same object only.

constructor
-----------

1) StringBuffer sb=new StringBuffer() 
--------------------------------------
It creates empty StringBuffer object with default initial capacity of 16.

If capacity reaches to maximum capacity then new capacity will be created with below formulea.

ex:
	capacity = current_capacity + 1 * 2;

ex:

class Test  
{
	public static void main(String[] args) 
	{
		StringBuffer sb=new StringBuffer();
		System.out.println(sb.capacity());//16

		sb.append("abcdefghijklmnop");
		System.out.println(sb.capacity());//16

		sb.append("qr");
		System.out.println(sb.capacity());//16+1*2=34
	}
}

2)StringBuffer sb=new StringBuffer(initial capacity)
------------------------------------------------------
It is used to create a StringBuffer object with specified initial capacity.

ex:
class Test  
{
	public static void main(String[] args) 
	{
		StringBuffer sb=new StringBuffer(19);
		System.out.println(sb.capacity());//19
	
	}
}


3) StringBuffer sb=new StringBuffer(String s);
-----------------------------------------------
It creates StringBuffer object equivalent to string. 

Here capacity will be created with below formulea.

ex:
	capacity = s.length() + 16

ex:
---
class Test  
{
	public static void main(String[] args) 
	{
		StringBuffer sb=new StringBuffer("ihub");
		System.out.println(sb.capacity());//4+16=20
	
	}
}

Q) Write a java program to display reverse of a String?

input:
	hello 

output:
	olleh 

ex:
---
class Test  
{
	public static void main(String[] args) 
	{
		String str="hello";

		StringBuffer sb=new StringBuffer(str);

		String rev=sb.reverse().toString();

		System.out.println(rev);
	}
}


Q) Write a java program to check given String is palindrome or not?

input:
	racar 
output:
	It is a palindrome string 

ex:
class Test  
{
	public static void main(String[] args) 
	{
		String str="racar";

		StringBuffer sb=new StringBuffer(str);

		String rev=sb.reverse().toString();

		if(str.equals(rev))
			System.out.println("It is a palindrome string");
		else
			System.out.println("It is not a palindrome string");
	}
}

Q) Write a java program to multiply two arrays?

input:
	5 2 1
	3 6 

output:
	18756 (521*36)

ex:
---
class Test  
{
	public static void main(String[] args) 
	{
		int[] arr1={5,2,1};
		int[] arr2={3,6};

		int a=Integer.parseInt(arrayToString(arr1));
		int b=Integer.parseInt(arrayToString(arr2));
		System.out.println(a*b);
	}
	//callie method
	public static String arrayToString(int[] arr)
	{
		StringBuffer sb=new StringBuffer();
		for(int i:arr)
		{
			sb.append(i);
		}

		return sb.toString();
	}
}

StringBuilder 
=============
StringBuilder exactly same as StringBuffer with following differences.

StringBuffer					StringBuilder 
-------------					---------------
Methods are synchronized.			Methods are not synchronized.

At a time only one thread is allowed to operate Multiple threads are allowed to operate on 	
on StringBuffer object.Hence StringBuffer is 	StringBuilder object.Hence StringBuilder is not 
thread safe.					thread safe.

Waiting time of a thread will increase 		There is no waiting threads effectively performance 
effectively performance is low.			is high.

It is introduced in 1.0v.			It is introduced in 1.5v.


Note:
-----
If our content not change frequently then we need to use String.

If our content change frequently where thread safety is required then we need to use StringBuffer.

If our content change frequently where thread safety is not required then we need to use StringBuilder.



Q) Write a java program to count number of 2's?

input:
	22

output:
	6 (2,12,20,21,22)	

ex:
---
class Test  
{
	public static void main(String[] args) 
	{
		int n=22;

		StringBuilder sb=new StringBuilder();
		for(int i=1;i<=n;i++)
		{
			sb.append(i);
		}

		int cnt=0;
		for(int i=0;i<sb.length();i++)
		{
			int k = Character.getNumericValue(sb.charAt(i));

			if(k==2)
			{
				cnt++;
			}
		}
		System.out.println(cnt);
	}
}

Assignment
==========
Q) Write a java program to display the string ?

input:
	NEX123

output:
	Number of Digits : 3 
	Sum of Digits : 6
	It is a even number 




















































