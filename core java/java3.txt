JAVA
=====
Software	: JDK 11

Version		: Java 8

Creator 	: James Gosling 

Vendor		: Oracle Corporation 

Open source	: Open source

Website		: www.oracle.com/in/java

Tutorials	: www.javatpoint.com
		  www.javaus.com
	  	  www.tutorialspoint.com 
		  www.dzone.com 
		  and etc.

Download link	:  

https://drive.google.com/file/d/1GtRLHXK4y3s97BH2UcYiJPNBaROR1DBV/view?usp=drive_link



Steps to setup java environmental variables
============================================
step1:
-----
	Make sure JDK 11 installed successfully.

step2:
-----
	Copy "lib" directory from JAVA_HOME folder.
	ex:
		C:\Program Files\Java\jdk-11\lib

step3:
------
	Paste "lib" directory to Environmental variables.
	ex:
		Right click to This PC --> properties --> advanced system settings -->
		environmental variables --> user variables --> click to new button -->
		variable name : CLASSPATH
		variable value : C:\Program Files\Java\jdk-11\lib; --> ok.

		system variables --> click to new button --> 
		variable name : path  
		variable value : C:\Program Files\Java\jdk-11\bin; -->ok --> ok --> ok.

step4:
------
	Check environmental setup done perfectly or not.
	ex:
		cmd> javap
		cmd> java   -version 


Steps to develop first Java application 
========================================
step1:
------
	Make sure JDK11 installed successfully.

step2:
------
	Make sure environmental setup done perfectly.

step3:
-----
	Create a "javaprog" folder inside "D' Drive.4

step4:
-----
	Open the notepad and develop Hello World program.
	ex:
		class Test 
		{	
			public static void main(String[] args)
			{
				System.out.println("Hello World");
			}
		}
	
step5:
------
	Save above program inside "javaprog" location with same name as class name.


step6:
------
	Open the command prompt from javaprog location.

step7:
------	
	Compile above program by using below command.
	ex:
		javac  Test.java

step8:
-----
	Run above program by using below command.
	ex:
		java Test 


Internal Architecture of JVM
=============================
Diagram: java3.1

Java application contains java code instructions.Once if we compile, java code instructions convert to byte code instructions in .class file.

JVM invokes one module called classloader/sub system to load all the byte code instructions from .class file.The work of classloader is to check these byte code instructions are proper or not. If they are proper then it will refuse the execution. If they are proper then it will allocates the memory. 

We have five types of memories in java.

1) Method Area 
-------------
	It contains code of a class, code of a variable and code of a method.

2) Heap 
-------
	Our object creations will store in heap area.

3) Java Stack 
------------
	Java methods stores in method area but to execute those methods we required some 
	memory and that memory will be allocated in java stack.

4) PC Register
--------------
	It is a program counter register which is used to track the address of an instructions.

5) Native Method Stack 
-----------------------
	Java methods execute in method area.
	Similarly native methods execute in native method stack.
	But to execute native methods we required a program called Native method interface.

Execution Engine 
-----------------
Execution engine contains interpreter and JIT compiler.

Interpreter is used execute our program line by line procedure.

JIT compiler is used to increase the execution speed of our program.

Finally , our JVM converts byte code to machine code.


Interview Questions
===================
Q) What is JIT compiler?
IT is a part of a JVM which is used to increase the execution speed of our program.


q) What is Native method in java?
A method which is developed by using some other language is called native method.


Q) How many memories are there in java?
We have five memories in java.

1) Method Area 
2) Heap
3) Java Stack 
4) PC Register 
5) Native Method Stack




































